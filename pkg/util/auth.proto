syntax = "proto3";

import "evecommon/evecommon.proto";

package org.lfedge.eve.auth;
option go_package  = "github.com/lf-edge/eve/api/go/auth";
option java_package = "org.lfedge.eve.auth";


message AuthBody {
  bytes  payload = 1;
}

message AuthContainer {
  AuthBody protectedPayload = 1;      // envolope body, a marshalled protobuf data or it can be null
  // if the length of senderCertHash received is not N bytes, as described in hashAlgorithm, then the protobuf
  // message either is not AuthContainer type, or is corrupted. Otherwise, the
  // reciever may not have the sender's signing certificate
  org.lfedge.eve.common.HashAlgorithm algo = 2;        // hash algorithm used by sender Cert
  bytes   senderCertHash = 3;    // N bytes in length, 1st N bytes of sender siging cert sha256 hash
  bytes    signatureHash = 4;    // signature of the sha256 hash of the payload
  bytes    senderCert = 5;       // full senderCert needed for some payloads
}
